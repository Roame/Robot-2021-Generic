// automatically generated by the FlatBuffers compiler, do not modify

package frc.taurus.joystick.generated;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class JoystickGoal extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static JoystickGoal getRootAsJoystickGoal(ByteBuffer _bb) { return getRootAsJoystickGoal(_bb, new JoystickGoal()); }
  public static JoystickGoal getRootAsJoystickGoal(ByteBuffer _bb, JoystickGoal obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean JoystickGoalBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "JOYG"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public JoystickGoal __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double timestamp() { int o = __offset(4); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public byte rumbleSide() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public float rumbleValue() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createJoystickGoal(FlatBufferBuilder builder,
      double timestamp,
      byte rumble_side,
      float rumble_value) {
    builder.startTable(3);
    JoystickGoal.addTimestamp(builder, timestamp);
    JoystickGoal.addRumbleValue(builder, rumble_value);
    JoystickGoal.addRumbleSide(builder, rumble_side);
    return JoystickGoal.endJoystickGoal(builder);
  }

  public static void startJoystickGoal(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addTimestamp(FlatBufferBuilder builder, double timestamp) { builder.addDouble(0, timestamp, 0.0); }
  public static void addRumbleSide(FlatBufferBuilder builder, byte rumbleSide) { builder.addByte(1, rumbleSide, 0); }
  public static void addRumbleValue(FlatBufferBuilder builder, float rumbleValue) { builder.addFloat(2, rumbleValue, 0.0f); }
  public static int endJoystickGoal(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishJoystickGoalBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "JOYG"); }
  public static void finishSizePrefixedJoystickGoalBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "JOYG"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public JoystickGoal get(int j) { return get(new JoystickGoal(), j); }
    public JoystickGoal get(JoystickGoal obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

